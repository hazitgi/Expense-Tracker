{"version":3,"sources":["context/AppReducer.jsx","context/GlobalState.jsx","component/AddTransaction.jsx","utils/formate.js","component/Balance.jsx","component/Header.jsx","component/IncomeExpenses.jsx","component/Transaction.jsx","component/TransactionList.jsx","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","loading","transactions","payload","filter","transation","_id","console","log","initialState","error","loding","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","getTrasaction","a","axios","get","res","data","deleteTransaction","id","delete","then","catch","err","addTransactions","transaction","config","headers","post","Provider","value","AddTransaction","useState","text","setText","amount","setAmout","useContext","onSubmit","event","preventDefault","alert","className","htmlFor","onChange","e","target","placeholder","numberWithCommas","x","toString","replace","Balance","amounts","map","total","reduce","acc","item","toFixed","Header","IncomeExpenses","income","expense","Transaction","sign","Math","abs","onClick","TransactionList","useEffect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0eea1803.chunk.js","sourcesContent":["export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'GET_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                transactions: action.payload\r\n            }\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter((transation) =>\r\n                    transation._id !== action.payload)\r\n            }\r\n\r\n        case 'ADD_TRANSACTION':\r\n            console.log(\"state.transactions\", state.transactions);\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport AppReducer from './AppReducer'\r\nimport axios from 'axios'\r\n// initail state\r\nconst initialState = {\r\n    transactions: [\r\n        // { id: 1, text: 'Flower', amount: -20 },\r\n        // { id: 2, text: 'Salary', amount: 300 },\r\n        // { id: 3, text: 'Book', amount: -10 },\r\n        // { id: 4, text: 'Camera', amount: 150 }\r\n    ],\r\n    error: null,\r\n    loding: true\r\n}\r\n\r\n\r\n// create Context\r\nconst GlobalContext = createContext(initialState)\r\n\r\n\r\n// Provider Component\r\nconst GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n    // action\r\n    let getTrasaction = async () => {\r\n        try {\r\n            const res = await axios.get('/api/v1/transations');\r\n            console.log(res.data.data);\r\n            dispatch({\r\n                type: 'GET_TRANSACTION',\r\n                payload: res.data.data\r\n            })\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n            console.log(err);\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.res\r\n            })\r\n        }\r\n    }\r\n\r\n    let deleteTransaction = async (id) => {\r\n        await axios.delete(`/api/v1/transations/${id}`)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: 'DELETE_TRANSACTION',\r\n                    payload: id\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: 'TRANSACTION_ERROR',\r\n                    payload: err.res\r\n                })\r\n            })\r\n    }\r\n\r\n    let addTransactions = async (transaction) => {\r\n        console.log(transaction);\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post(`/api/v1/transations/`, transaction, config)\r\n            console.log(res);\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.res\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransactions,\r\n            getTrasaction,\r\n            error: state.error,\r\n            loading: state.loading\r\n\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n\r\n}\r\nexport { GlobalProvider, GlobalContext };\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nlet AddTransaction = () => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [amount, setAmout] = useState('')\r\n\r\n    const { addTransactions } = useContext(GlobalContext)\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault()\r\n\r\n        const newTransaction = {\r\n            text,\r\n            amount: +amount\r\n        }\r\n        if (text && amount) {\r\n            addTransactions(newTransaction)\r\n        }else{\r\n            alert(\"Enter Transactions\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => {\r\n                        setText(e.target.value)\r\n                    }} id=\"text\" placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n                        (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" id=\"amount\" placeholder=\"Enter amount...\" value={amount}\r\n                        onChange={(e) => {\r\n                            setAmout(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n\r\n","export function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { numberWithCommas } from '../utils/formate'\r\n\r\nconst Balance = () => {\r\n    const { transactions } = useContext(GlobalContext)\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    console.log(amounts);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1 >₹{numberWithCommas(total)}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { numberWithCommas } from '../utils/formate';\r\n\r\nfunction IncomeExpenses() {\r\n    const { transactions } = useContext(GlobalContext)\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0)\r\n        \r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n        -1\r\n    )\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p id=\"money-plus\" className=\"money plus\">₹ {numberWithCommas(income)}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">₹ {numberWithCommas(expense)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/formate';\r\n\r\nfunction Transaction({ transaction }) {\r\n    const { deleteTransaction } = useContext(GlobalContext)\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <li key={transaction._id} className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text} <span>₹ {numberWithCommas(Math.abs(transaction.amount))} {sign}</span>\r\n            <button\r\n                onClick={() => deleteTransaction(transaction._id)}\r\n                className=\"delete-btn\"\r\n\r\n            >x</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport Transaction from './Transaction';\r\n\r\nfunction TransactionList() {\r\n\r\n    const { transactions, getTrasaction } = useContext(GlobalContext)\r\n\r\n    useEffect(() => {\r\n        getTrasaction();\r\n        // eslint-diable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul id=\"list\" className=\"list\">\r\n\r\n                {transactions.map(transaction => (<Transaction transaction={transaction} />))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import './App.css';\nimport AddTransaction from './component/AddTransaction';\nimport Balance from './component/Balance';\nimport Header from './component/Header';\nimport IncomeExpenses from './component/IncomeExpenses';\nimport TransactionList from './component/TransactionList';\nimport { GlobalProvider } from './context/GlobalState';\n\n\n\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"container\">\n        <Header />\n        <Balance />\n        <IncomeExpenses />\n        <AddTransaction />\n        <TransactionList />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}